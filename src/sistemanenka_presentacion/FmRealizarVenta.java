package sistemanenka_presentacion;

import com.sun.glass.events.KeyEvent;
import control.INegocios;
import dominio.Cliente;
import dominio.DetalleVenta;
import dominio.Empleado;
import dominio.Producto;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import models.JTableButtonRenderer;
import models.PreviaProductoRenderer;

/**
 *
 * @author dianacastro
 */
public class FmRealizarVenta extends FmBase {

    DefaultTableModel modeloTabla;
    INegocios negocios;
    Empleado empleado;

    /**
     * Creates new form FmRealizarVenta
     */
    public FmRealizarVenta(Empleado empleado) {
        initComponents();
        inicializar(empleado);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblAtiende = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        txtAtiende = new javax.swing.JTextField();
        cbCliente = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDetalleVenta = new javax.swing.JTable();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        lblRecibido = new javax.swing.JLabel();
        lblCambio = new javax.swing.JLabel();
        txtRecibido = new javax.swing.JTextField();
        txtCambio = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        pnlPrevia = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstPrevia = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        btnProductos = new javax.swing.JButton();
        btnVentas = new javax.swing.JButton();
        btnComprar = new javax.swing.JButton();
        btnCorte = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnAdministrador = new javax.swing.JButton();
        btnVenta = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1115, 650));
        setMinimumSize(new java.awt.Dimension(1115, 650));
        setSize(new java.awt.Dimension(1115, 650));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAtiende.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lblAtiende.setText("Atiende:");
        jPanel1.add(lblAtiende, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 25, -1, -1));

        lblCliente.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lblCliente.setText("Cliente:");
        jPanel1.add(lblCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 67, -1, 20));

        txtAtiende.setEditable(false);
        txtAtiende.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(47, 118, 176)));
        jPanel1.add(txtAtiende, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 240, 30));

        cbCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCliente.setBorder(null);
        jPanel1.add(cbCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 240, 30));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupa.png"))); // NOI18N
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 40, 30, 30));

        txtBuscar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(47, 118, 176)));
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        jPanel1.add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, 290, 30));

        tbDetalleVenta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(47, 118, 176)));
        tbDetalleVenta.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        tbDetalleVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CODIGO", "PRODUCTO", "PRECIO", "CANTIDAD", "IMPORTE", "ELIMINAR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDetalleVenta.setDoubleBuffered(true);
        tbDetalleVenta.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tbDetalleVenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDetalleVentaMouseClicked(evt);
            }
        });
        tbDetalleVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbDetalleVentaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbDetalleVentaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbDetalleVentaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbDetalleVenta);
        if (tbDetalleVenta.getColumnModel().getColumnCount() > 0) {
            tbDetalleVenta.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 840, 260));

        lblTotal.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        lblTotal.setText("Total $:");
        jPanel1.add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, -1, 30));

        txtTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(47, 118, 176)));
        txtTotal.setDisabledTextColor(new java.awt.Color(255, 51, 51));
        txtTotal.setEnabled(false);
        jPanel1.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, 140, 40));

        lblRecibido.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        lblRecibido.setText("Recibido:");
        jPanel1.add(lblRecibido, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 410, -1, 30));

        lblCambio.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        lblCambio.setText("Cambio:");
        jPanel1.add(lblCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, -1, 30));

        txtRecibido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(47, 118, 176)));
        txtRecibido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRecibidoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRecibidoKeyTyped(evt);
            }
        });
        jPanel1.add(txtRecibido, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 410, 140, 30));

        txtCambio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(47, 118, 176)));
        txtCambio.setDisabledTextColor(new java.awt.Color(255, 51, 51));
        txtCambio.setEnabled(false);
        jPanel1.add(txtCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 460, 140, 30));

        btnCancelar.setBackground(new java.awt.Color(243, 69, 51));
        btnCancelar.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.setBorder(null);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 490, 90, 30));

        btnAceptar.setBackground(new java.awt.Color(118, 194, 124));
        btnAceptar.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnAceptar.setText("ACEPTAR");
        btnAceptar.setBorder(null);
        btnAceptar.setBorderPainted(false);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 440, 150, 50));

        lstPrevia.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstPrevia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstPreviaMouseClicked(evt);
            }
        });
        lstPrevia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lstPreviaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(lstPrevia);

        javax.swing.GroupLayout pnlPreviaLayout = new javax.swing.GroupLayout(pnlPrevia);
        pnlPrevia.setLayout(pnlPreviaLayout);
        pnlPreviaLayout.setHorizontalGroup(
            pnlPreviaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
        );
        pnlPreviaLayout.setVerticalGroup(
            pnlPreviaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(pnlPrevia, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, 290, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 970, 540));

        jPanel2.setBackground(new java.awt.Color(47, 118, 176));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnProductos.setBackground(new java.awt.Color(47, 118, 176));
        btnProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dulce.png"))); // NOI18N
        btnProductos.setText("Productos");
        btnProductos.setBorder(null);
        btnProductos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnProductos.setMaximumSize(new java.awt.Dimension(95, 100));
        btnProductos.setMinimumSize(new java.awt.Dimension(95, 100));
        btnProductos.setPreferredSize(new java.awt.Dimension(95, 100));
        btnProductos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductosActionPerformed(evt);
            }
        });
        jPanel2.add(btnProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        btnVentas.setBackground(new java.awt.Color(47, 118, 176));
        btnVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/proyecto-de-ley.png"))); // NOI18N
        btnVentas.setText("Ventas");
        btnVentas.setBorder(null);
        btnVentas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVentas.setMaximumSize(new java.awt.Dimension(95, 100));
        btnVentas.setMinimumSize(new java.awt.Dimension(95, 100));
        btnVentas.setPreferredSize(new java.awt.Dimension(95, 100));
        btnVentas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVentasActionPerformed(evt);
            }
        });
        jPanel2.add(btnVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, 89));

        btnComprar.setBackground(new java.awt.Color(47, 118, 176));
        btnComprar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pagar.png"))); // NOI18N
        btnComprar.setText("Comprar");
        btnComprar.setBorder(null);
        btnComprar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnComprar.setMaximumSize(new java.awt.Dimension(95, 100));
        btnComprar.setMinimumSize(new java.awt.Dimension(95, 100));
        btnComprar.setPreferredSize(new java.awt.Dimension(95, 100));
        btnComprar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel2.add(btnComprar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 266, -1, 90));

        btnCorte.setBackground(new java.awt.Color(47, 118, 176));
        btnCorte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cajero-automatico.png"))); // NOI18N
        btnCorte.setText("Corte Caja");
        btnCorte.setBorder(null);
        btnCorte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCorte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel2.add(btnCorte, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 150, 540));

        jPanel3.setBackground(new java.awt.Color(47, 118, 176));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAdministrador.setBackground(new java.awt.Color(47, 118, 176));
        btnAdministrador.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnAdministrador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/administracion.png"))); // NOI18N
        btnAdministrador.setText("Administrador");
        btnAdministrador.setBorder(null);
        btnAdministrador.setBorderPainted(false);
        btnAdministrador.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdministrador.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdministrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdministradorActionPerformed(evt);
            }
        });
        jPanel3.add(btnAdministrador, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 140, 90));

        btnVenta.setBackground(new java.awt.Color(47, 118, 176));
        btnVenta.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cesta-de-la-compra.png"))); // NOI18N
        btnVenta.setText("Venta");
        btnVenta.setToolTipText("");
        btnVenta.setBorder(null);
        btnVenta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVenta.setMaximumSize(new java.awt.Dimension(134, 101));
        btnVenta.setMinimumSize(new java.awt.Dimension(134, 101));
        btnVenta.setPreferredSize(new java.awt.Dimension(134, 101));
        btnVenta.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel3.add(btnVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 140, 90));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Venta");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 520, 70));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 970, 110));

        jPanel4.setBackground(new java.awt.Color(47, 111, 159));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("SISTEMA NENKA");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 120, 60));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 110));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdministradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdministradorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAdministradorActionPerformed

    private void btnProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductosActionPerformed
      
        if (cambiarVentana() == 0) {

            negocios.nuevaVenta();
            FmProductos fProductos = new FmProductos();
            fProductos.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btnProductosActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if (!txtRecibido.getText().isEmpty()) {
            if (negocios.completarVenta(Double.parseDouble(txtRecibido.getText()), null, empleado)) {
                JOptionPane.showMessageDialog(rootPane, "La venta se ha realizado con éxito.");
                limpiaDatos();
            } else {
                JOptionPane.showMessageDialog(rootPane, "La cantidad recibida no es suficiente.");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se puede realizar la venta porque hay campos vacíos.");
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int opcion = JOptionPane.showConfirmDialog(rootPane,
                "¿Está seguro que desea cancelar la venta?",
                "Confirmar",
                JOptionPane.YES_NO_OPTION);

        if (opcion == 0) {
            negocios.nuevaVenta();
            limpiaDatos();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtRecibidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecibidoKeyReleased
        if (!txtRecibido.getText().isEmpty()) {
            double cambio = negocios.obtenerCambio(Double.parseDouble(txtRecibido.getText()));
            if (cambio >= 0) {
                txtCambio.setText(String.format("%.2f", cambio));
                return;
            }
            txtCambio.setText(String.format("Falta: %.2f", Math.abs(cambio)));
        }
    }//GEN-LAST:event_txtRecibidoKeyReleased

    private void tbDetalleVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbDetalleVentaKeyReleased

        int tecla = evt.getKeyCode();
        if (tecla == KeyEvent.VK_ENTER
                || tecla == KeyEvent.VK_UP
                || tecla == KeyEvent.VK_DOWN
                || tecla == KeyEvent.VK_LEFT
                || tecla == KeyEvent.VK_RIGHT) {

            Producto producto = new Producto();
            int row = tbDetalleVenta.getSelectedRow();
            int column = tbDetalleVenta.getSelectedColumn();
            int cantidad = 0;
            try {
                cantidad = Integer.valueOf(modeloTabla.getValueAt(row, column).toString());
                if (cantidad < 1) {
                    /*actualizaTabla();
                    JOptionPane.showMessageDialog(rootPane, "La cantidad debe ser mayor que 0.", "Error", JOptionPane.ERROR_MESSAGE);
                     */
                    eliminarProductoCarrito((int) modeloTabla.getValueAt(row, 0), 0);
                    return;
                }
                producto.setId(Integer.valueOf(modeloTabla.getValueAt(row, 0).toString()));
            } catch (Exception e) {
                return;
            }
            if (negocios.editarDetalleVenta(producto, cantidad)) {
                actualizaTabla();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No hay la cantidad suficiente.", "Error", JOptionPane.ERROR_MESSAGE);
                actualizaTabla();
            }
        }

    }//GEN-LAST:event_tbDetalleVentaKeyReleased

    private void tbDetalleVentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDetalleVentaMouseClicked

        int column = tbDetalleVenta.getSelectedColumn();

        if (column == 5) {
            int row = tbDetalleVenta.getSelectedRow();

            int id = (int) tbDetalleVenta.getValueAt(row, 0);
            double cantidad = (double) tbDetalleVenta.getValueAt(row, 3);
            eliminarProductoCarrito(id, cantidad);
        }
    }//GEN-LAST:event_tbDetalleVentaMouseClicked

    private void txtRecibidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecibidoKeyTyped
        //[0-9]+(\.[0-9][0-9]?)?
        String texto = txtRecibido.getText() + evt.getKeyChar();
        if (texto.equals(".")) {
            evt.consume();
            return;
        }
        if (txtRecibido.getText().contains(".")) {
            if (!texto.matches("^[0-9]+([.][0-9]+)?$")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtRecibidoKeyTyped

    private void tbDetalleVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbDetalleVentaKeyTyped
        String texto = txtRecibido.getText() + evt.getKeyChar();
        if (texto.equals(".")) {
            evt.consume();
            return;
        }
        if (txtRecibido.getText().contains(".")) {
            if (!texto.matches("^[0-9]+([.][0-9]+)?$")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_tbDetalleVentaKeyTyped

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        buscarProductos();
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void buscarProductos() {
        List<Producto> productos = negocios.buscarProducto(txtBuscar.getText());
        List <Producto> productos1 = negocios.buscarProductoCategoria(txtBuscar.getText());
        if (productos.isEmpty() && productos1.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No se encontró ningún producto en esta búsqueda.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!productos1.isEmpty()){
            crearListaPreviaProductos(productos1);
        }else{
            crearListaPreviaProductos(productos);
        }
    }

    private void lstPreviaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstPreviaMouseClicked
        if (evt.getClickCount() == 2) {
            int i = lstPrevia.locationToIndex(evt.getPoint());

            Producto producto = lstPrevia.getModel().getElementAt(i);

            agregaProductoBuscado(producto);
        }
    }//GEN-LAST:event_lstPreviaMouseClicked

    private void lstPreviaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lstPreviaKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int i = lstPrevia.getSelectedIndex();
            Producto producto = lstPrevia.getModel().getElementAt(i);
            agregaProductoBuscado(producto);
        }
    }//GEN-LAST:event_lstPreviaKeyReleased

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            buscarProductos();
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void tbDetalleVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbDetalleVentaKeyPressed
        if (KeyEvent.VK_DELETE == evt.getKeyCode()) {
            ArrayList<Integer> productos = new ArrayList<>();
            int[] seleccionados = tbDetalleVenta.getSelectedRows();
            for (int i = 0; i < seleccionados.length; i++) {
                System.out.println(tbDetalleVenta.getModel().getValueAt(seleccionados[i], 0));
                int dd = (int)tbDetalleVenta.getModel().getValueAt(seleccionados[i], 0);
                productos.add(dd);
        }
            for (Integer producto : productos) {
                eliminarProductoCarrito(producto, 1);
            }

        }
    }//GEN-LAST:event_tbDetalleVentaKeyPressed

    private void btnVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVentasActionPerformed
        FrGenerarReportesVentas frmReporteVentas = new FrGenerarReportesVentas(empleado);
        frmReporteVentas.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVentasActionPerformed

    private void agregaProductoBuscado(Producto producto) {
        SpinnerNumberModel sModel = new SpinnerNumberModel(1.0, 0.0, 99.0, 1.0);
        JSpinner spinner = new JSpinner(sModel);
        int opcion = JOptionPane.showOptionDialog(null, spinner, "Indique la cantidad:", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (opcion == JOptionPane.OK_OPTION) {
            double cantidad = (double) spinner.getValue();
            if (cantidad > 0) {
                if (negocios.agregarProductoCarrito(producto, cantidad)) {
                    txtBuscar.setText("");
                    pnlPrevia.setVisible(false);
                    actualizaTabla();
                    txtBuscar.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No hay la cantidad suficiente.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    private void crearListaPreviaProductos(List<Producto> productos) {
        if (!productos.isEmpty()) {
            DefaultListModel<Producto> modelo = new DefaultListModel<>();

            for (Producto producto : productos) {
                modelo.addElement(producto);
            }

            lstPrevia.setModel(modelo);

            lstPrevia.setCellRenderer(new PreviaProductoRenderer());
            //  JList<Producto> lstPreviaProductos=new JList<>(modelo);
            // lstPreviaProductos.setSize(200,200);
            // spnlPrevia.add(lstPreviaProductos);
            pnlPrevia.setVisible(true);
        } else {
            pnlPrevia.setVisible(false);
        }
    }

    private void actualizaTabla() {
        List<DetalleVenta> lstDetalleVenta = negocios.obtenerDetallesVenta();

        modeloTabla.setRowCount(0);

        for (DetalleVenta detalle : lstDetalleVenta) {
            Producto producto = detalle.getProducto();
            JButton btnEliminar = new JButton();
            btnEliminar.setText("ELIMINAR");
            Object[] fila = new Object[6];
            fila[0] = producto.getId();
            fila[1] = producto.getNombre();
            fila[2] = producto.getPrecio();
            fila[3] = detalle.getCantidad();
            fila[4] = detalle.getImporte();
            fila[5] = btnEliminar;
            modeloTabla.addRow(fila);
        }

        txtTotal.setText(String.format("%.2f", negocios.obtenerTotalVenta()));

    }

    private void llenarCBoxClientes() {
        List<Cliente> clientes = negocios.obtenerClientes();
        Cliente[] arrayClientes = clientes.toArray(new Cliente[0]);

        cbCliente.setModel(new DefaultComboBoxModel(arrayClientes));
    }

    private void cargarEmpleado(Empleado empleado) {
        this.txtAtiende.setText(empleado.getNombre());
    }

    private void limpiaDatos() {

        modeloTabla.setRowCount(0);

        txtBuscar.setText("");
        txtRecibido.setText("0.0");
        txtCambio.setText("0.0");
        txtTotal.setText("0.0");
    }

    private void cargarTabla() {

        //productos = negocios.obtenerProductos();
        modeloTabla.setRowCount(0);
        agregaProductosAVenta();
        /*for (Producto producto: productos) {
            
            double importe = (producto.getPrecio() * producto.getStock());
            
            Object[] fila = new Object[5];
            fila[0] = producto.getId();
            fila[1] = producto.getNombre();
            fila[2] = producto.getPrecio();
            fila[3] = producto.getStock();
            fila[4] = importe;
            modeloTabla.addRow(fila);
        }*/
    }

    /**
     * Este método es una simulación
     */
    private void agregaProductosAVenta() {

        List<Producto> productos = negocios.obtenerProductos();

        negocios.nuevaVenta();

        //negocios.agregarProductoCarrito(productos.get(0), 3);
        // negocios.agregarProductoCarrito(productos.get(0), 1);
        // negocios.agregarProductoCarrito(productos.get(0), 1);
        //negocios.agregarProductoCarrito(productos.get(1), 1);

        List<DetalleVenta> detalles = negocios.obtenerDetallesVenta();

        for (DetalleVenta detalle : detalles) {
            Producto producto = detalle.getProducto();
            JButton btnEliminar = new JButton();
            btnEliminar.setText("ELIMINAR");
            Object[] fila = new Object[6];
            fila[0] = producto.getId();
            fila[1] = producto.getNombre();
            fila[2] = producto.getPrecio();
            fila[3] = detalle.getCantidad();
            fila[4] = detalle.getImporte();
            fila[5] = btnEliminar;
            modeloTabla.addRow(fila);
        }

        txtTotal.setText(String.format("%.2f", negocios.obtenerTotalVenta()));
    }

    private void eliminarProductoCarrito(int idProducto, double cantidad) {
        int opcion = JOptionPane.showConfirmDialog(rootPane,
                "¿Está seguro que desea retirar este producto del carrito?",
                "Confirmar",
                JOptionPane.YES_NO_OPTION);

        if (opcion == 0) {
            Producto producto = new Producto();
            producto.setId(idProducto);
            if (tbDetalleVenta.getRowCount() == 1) {
                btnCancelarActionPerformed(null);
            } else if (cantidad == 0) {
                negocios.eliminarProductoCarrito(producto);
            } else {
                negocios.eliminarProductoCarrito(producto, cantidad);
            }
        }

        actualizaTabla();
    }
    
    private int cambiarVentana(){
        return JOptionPane.showConfirmDialog(rootPane,
                "¿Está seguro que desea salir y cancelar la venta?",
                "Confirmar",
                JOptionPane.YES_NO_OPTION);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAdministrador;
    private javax.swing.JLabel btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton btnCorte;
    private javax.swing.JButton btnProductos;
    private javax.swing.JButton btnVenta;
    private javax.swing.JButton btnVentas;
    private javax.swing.JComboBox<String> cbCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAtiende;
    private javax.swing.JLabel lblCambio;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblRecibido;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JList<Producto> lstPrevia;
    private javax.swing.JPanel pnlPrevia;
    private javax.swing.JTable tbDetalleVenta;
    private javax.swing.JTextField txtAtiende;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCambio;
    private javax.swing.JTextField txtRecibido;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void inicializar(Empleado empleado) {
        this.setTitle("Dulcería La Abue | Realizar Venta");
        this.setLocationRelativeTo(null);
        this.empleado = empleado;
        tbDetalleVenta.getColumn("ELIMINAR").setCellRenderer(new JTableButtonRenderer());
        modeloTabla = (DefaultTableModel) tbDetalleVenta.getModel();
        negocios = getFachadaNegocios();
        cargarTabla();
        llenarCBoxClientes();
        cargarEmpleado(empleado);
        pnlPrevia.setVisible(false);
    }
}
